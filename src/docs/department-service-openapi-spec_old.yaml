openapi: 3.0.3
info:
  title: Department Management Service
  description: API for managing departments in the Task Display System.
  version: 1.0.0
servers:
  - url: /api/departments
    description: Base URL for Department Management APIs
paths:
  /create:
    post:
      summary: Create a new department
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
      responses:
        '201':
          description: Department successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
  /all:
    get:
      summary: Get all departments
      responses:
        '200':
          description: List of all departments.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Department'
  /{id}:
    get:
      summary: Get a department by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Department found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
        '404':
          description: Department not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /update/{id}:
    put:
      summary: Update a department by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
      responses:
        '200':
          description: Department successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
        '404':
          description: Department not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /delete/{id}:
    delete:
      summary: Delete a department by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Department successfully deleted.
        '404':
          description: Department not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    Department:
      type: object
      properties:
        id:
          type: string
          description: Unique department ID.
        departmentsName:
          type: string
          description: Name of the department.
        description:
          type: string
          description: Description of the department.
        managerId:
          type: string
          description: Reference to the manager of the department.
        userIds:
          type: array
          items:
            type: string
          description: List of user IDs in the department.
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: Error message.
        status:
          type: integer
          description: HTTP status code.
